{"version":3,"sources":["node_modules/browser-pack/_prelude.js","Scripts/Input/component-bootstrapper.js","Scripts/Input/widget-bootstrapper.js","Renderer/Controls/ActionButton.js","Renderer/Controls/ColorPicker.js","Renderer/Controls/DragAndDropImage.js","Renderer/Controls/Dropdown.js","Renderer/Controls/Image.js","Renderer/Controls/NumericInput.js","Renderer/Controls/Slider.js","Renderer/Controls/TextInput.js","Renderer/Controls/YesNo.js","Renderer/Data/ControlsStore.js","Renderer/Data/DataStore.js","Renderer/Data/ViewModelStore.js","Renderer/Partials/MenuView.js","Renderer/Partials/MenuViewModel.js","Renderer/Partials/SceneControlsView.js","Renderer/Partials/SceneControlsViewModel.js","Renderer/Partials/SceneView.js","Renderer/Partials/SceneViewModel.js","Utils/cache.js","Utils/databind.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpphpyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundleB-scripts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","ko.observable.fn.silentUpdate = function (value) {\r\n    this.notifySubscribers = function () { };\r\n    this(value);\r\n    this.notifySubscribers = function () {\r\n        ko.subscribable.fn.notifySubscribers.apply(this, arguments);\r\n    };\r\n};","var DataStore = require('./../../Renderer/Data/DataStore.js');\r\n\r\nCT.dataStore = DataStore;\r\n\r\nvar ViewModelStore = require('./../../Renderer/Data/ViewModelStore.js');\r\n\r\nCT.viewModelStore = ViewModelStore;\r\n\r\nvar ControlsStore = require('./../../Renderer/Data/ControlsStore.js');\r\n\r\nCT.controlsStore = ControlsStore;\r\n\r\nCT.utils = {};\r\n\r\nvar Cache = require('./../../Utils/cache.js');\r\n\r\nCT.utils.cache = Cache.initialize();\r\n\r\nvar DataBind = require('./../../Utils/databind.js');\r\n\r\nCT.utils.dataBind = DataBind;\r\n\r\n//CT.controllers.View.initialize();\r\n","var ActionButton = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = ActionButton;","var ColorPicker = function (config, path) {\r\n\r\n    var self = this;\r\n\r\n    self.red = config.red;\r\n    self.green = config.green;\r\n    self.blue = config.blue;\r\n\r\n    /*\r\n     <div id=\"cp3a\" class=\"input-group\" data-color=\"rgb(241, 138, 49)\"\r\n     title=\"Using data-color attribute in the colorpicker element\">\r\n  <input type=\"text\" class=\"form-control input-lg\"/>\r\n  <span class=\"input-group-append\">\r\n    <span class=\"input-group-text colorpicker-input-addon\"><i></i></span>\r\n  </span>\r\n</div>\r\n     */\r\n\r\n    var colorPicker = $('<div>', { 'class': 'input-group colorPicker', 'data-color': 'rgb(' + self.red + ', ' + self.green + ', ' + self.blue + ')' });\r\n\r\n    var textInput = $('<input>', { 'type': 'text', 'class': 'form-control input-lg' });\r\n\r\n    CT.utils.dataBind(textInput, \"value:$data\", path);\r\n\r\n    colorPicker.append(textInput);\r\n\r\n    var spanOuter = $('<span>', { 'class': 'input-group-append' });\r\n\r\n    var spanInner = $('<span>', { 'class': 'input-group-text colorpicker-input-addon' });\r\n\r\n    var icon = $('<i>');\r\n\r\n    spanInner.append(icon);\r\n\r\n    spanOuter.append(spanInner);\r\n\r\n    colorPicker.append(spanOuter);\r\n\r\n    return colorPicker;\r\n\r\n\r\n}\r\n\r\nmodule.exports = ColorPicker;","var DragAndDropImage = function (config) {\r\n\r\n    var self = this;\r\n\r\n    self.style = config.style+' ;z-index:99999; position:relative; cursor:pointer';\r\n    self.src = config.src;\r\n    self.id = config.id;\r\n    self.data = config.data;\r\n\r\n    var img = $('<img>', { 'style':self.style, 'src':self.src, 'id':self.id });\r\n\r\n    if (self.data) {\r\n        for (var prop in self.data) {\r\n            img.data(prop, self.data[prop]);\r\n        }\r\n    }\r\n\r\n    img.draggable({ revert: true });\r\n\r\n    return img;\r\n}\r\n\r\nmodule.exports = DragAndDropImage;","var Dropdown = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = Dropdown;","var Image = function (config) {\r\n\r\n    var self = this;\r\n\r\n    self.style = config.style+' ;z-index:99999; position:relative; cursor:pointer';\r\n    self.src = config.src;\r\n    self.id = config.id;\r\n    self.data = config.data;\r\n\r\n    var img = $('<img>', { 'style':self.style, 'src':self.src, 'id':self.id });\r\n\r\n    if (self.data) {\r\n        for (var prop in self.data) {\r\n            img.data(prop, self.data[prop]);\r\n        }\r\n    }\r\n\r\n    return img;\r\n}\r\n\r\nmodule.exports = Image;","var NumericInput = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = NumericInput;","var Slider = function (config, path) {\r\n\r\n    var self = this;\r\n    self.min = config.min;\r\n    self.max = config.max;\r\n    self.suffix = config.suffix || '';\r\n    self.id = config.id;\r\n\r\n    /*\r\n     <div class=\"slidecontainer\">\r\n//   <input type=\"range\" min=\"0\" max=\"100\" value=\"0\" class=\"slider\" id=\"myRange\" \r\noninput=\"$('#numberedSlider').html(''+this.value+'%'); \r\nvar width = $(this).width()-57;$('#numberedSlider').css('left', ''+(parseInt(this.value * (width/100.0)+28))+'px')\">\r\n//   <div style=\"position: absolute; top: -2px; left: 28px; width: 30px; height: 24px; text-align: center; padding-top: 2px; \r\npointer-events: none;\" id=\"numberedSlider\">0%</div>\r\n//   </div>\r\n     */\r\n\r\n    var slidecontainer = $('<div>', { 'class': 'slidecontainer' });\r\n\r\n    var input = $('<input>', {\r\n        'type': 'range', 'min': self.min, 'max': self.max, 'class': 'slider', 'style':'opacity:0.0'\r\n    });\r\n\r\n    input.on({\r\n        'input change': function (e) {\r\n            var target = e.target;\r\n            var self = this;\r\n            var val = $(target).prop(\"value\");\r\n            $('#span-' + self.id).html('' + val + self.suffix);\r\n            var width = $(target).width() - 57;\r\n            $('#' + self.id).css('left', '' + (parseInt(100.0 * (val / (self.max * 1.0)))) + '%');\r\n        }.bind({ 'id':self.id, 'max':self.max, 'suffix':self.suffix })\r\n    });\r\n\r\n    var odiv = $('<div>', { 'style':'position:absolute; top:0px; width:100%; height:20px; padding-left:15px; padding-right:78px; pointer-events:none; z-index:100; margin-top:5px' });\r\n\r\n    var div = $('<div>', {\r\n        'style': 'position: relative; top: -2px; left: 56%; width: 50px; height: 24px; color:black; text-align: center; background-color: rgba(255, 255, 255, 0.8); border: 1px dotted black; border-radius: 10px; pointer-events: none; padding-top: 0px;',\r\n        'id': self.id\r\n    });\r\n\r\n    var ispan = $('<span>', { 'id':'span-'+self.id, 'style':'position:relative; top:-2px;' });\r\n\r\n    div.append(ispan);\r\n\r\n    odiv.append(div);\r\n\r\n    var bdiv = $('<div>', { 'style': 'position:absolute; top:10px; left:15px; opacity:1; pointer-events:none; width:90%; height:10px; background: #fff; border:1px black dotted; border-radius:10px' });\r\n\r\n    CT.utils.dataBind(input, \"value:$data\", path);\r\n\r\n    slidecontainer.append(input);\r\n\r\n    slidecontainer.append(odiv);\r\n\r\n    slidecontainer.append(bdiv);\r\n\r\n    return slidecontainer;\r\n\r\n}\r\n\r\nmodule.exports = Slider;","var TextInput = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = TextInput;","var YesNo = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = YesNo;","var _ = window._;\r\n\r\nvar cs = (function () {\r\n\r\n    var ControlsStore = function () {\r\n\r\n        var self = this;\r\n\r\n         \r\n        self.ActionButton = require('./../Controls/ActionButton.js');\r\n        self.ColorPicker = require('./../Controls/ColorPicker.js');\r\n        self.DragAndDropImage = require('./../Controls/DragAndDropImage');\r\n        self.Image = require('./../Controls/Image');\r\n        self.Dropdown = require('./../Controls/Dropdown');\r\n        self.NumericInput = require('./../Controls/NumericInput.js');\r\n        self.Slider = require('./../Controls/Slider.js');\r\n        self.TextInput = require('./../Controls/TextInput');\r\n        self.YesNo = require('./../Controls/YesNo.js');\r\n\r\n\r\n    }\r\n\r\n\r\n    return new ControlsStore();\r\n\r\n}).call({});\r\n\r\n\r\nmodule.exports = cs;","var _ = window._;\r\n\r\n\r\nvar ds = (function () {\r\n\r\n    var DataStore = function () {\r\n\r\n        var self = this;\r\n\r\n        //self.connectorColors = [\r\n        //    'blue'\r\n        //];\r\n\r\n        //self.rodColors = [\r\n\r\n        //    'blue'\r\n        //];\r\n\r\n        self.connectorColors = [\r\n            'yellow',\r\n            'blue',\r\n            'green',\r\n            'purple',\r\n            'orange',\r\n            'gray',\r\n            'white',\r\n            'red'\r\n        ];\r\n\r\n        self.rodColors = [\r\n\r\n            'yellow',\r\n            'blue',\r\n            'green',\r\n            'black',\r\n            'gray',\r\n            'white',\r\n            'red'\r\n        ];\r\n\r\n        self.importSceneData = ko.observable(\r\n            {\r\n                'ImportData': ko.observable(\"\")\r\n            }\r\n        );\r\n\r\n        self.saveSceneData = ko.observable(\r\n            {\r\n                'SavedData': ko.observable({})\r\n            }\r\n        );\r\n\r\n        self.saveSceneData()[\"ExportData\"] = ko.computed(\r\n            function () {\r\n                var self = this.saveSceneData();\r\n                var d = self.SavedData();\r\n                var str = JSON.stringify(d, undefined, 4);\r\n                return str;\r\n            },\r\n            self\r\n        );\r\n\r\n        self.addToSceneData = ko.observable({\r\n            'loadedConnectors': {\r\n                'yellow': ko.observable(false),\r\n                'blue': ko.observable(false),\r\n                'green': ko.observable(false),\r\n                'purple': ko.observable(false),\r\n                'orange': ko.observable(false),\r\n                'gray': ko.observable(false),\r\n                'white': ko.observable(false),\r\n                'red': ko.observable(false)\r\n            },\r\n            'loadedRods': {\r\n                'yellow': ko.observable(false),\r\n                'blue': ko.observable(false),\r\n                'green': ko.observable(false),\r\n                'black': ko.observable(false),\r\n                'gray': ko.observable(false),\r\n                'white': ko.observable(false),\r\n                'red': ko.observable(false)\r\n            },\r\n            'showConnectors': {\r\n                'yellow': ko.observable(true),\r\n                'blue': ko.observable(true),\r\n                'green': ko.observable(true),\r\n                'purple': ko.observable(true),\r\n                'orange': ko.observable(true),\r\n                'gray': ko.observable(true),\r\n                'white': ko.observable(true),\r\n                'red': ko.observable(true)\r\n            },\r\n            'showRods': {\r\n                'yellow': ko.observable(true),\r\n                'blue': ko.observable(true),\r\n                'green': ko.observable(true),\r\n                'black': ko.observable(true),\r\n                'gray': ko.observable(true),\r\n                'white': ko.observable(true),\r\n                'red': ko.observable(true)\r\n            }\r\n        });\r\n\r\n        self.sceneLiveActionData = ko.observable({\r\n            'MousePositionX': ko.observable(),\r\n            'MousePositionY': ko.observable(),\r\n            'MousePositionZ': ko.observable(),\r\n            'IsOverScene': ko.observable(false),\r\n            'MouseOverComponentColor': ko.observable(),\r\n            'MouseOverComponentType': ko.observable(),\r\n            'MouseOverComponentId': ko.observable(),\r\n            'MouseOverComponentData': ko.observable(),\r\n            'MouseOverComponentGroupId': ko.observable(),\r\n            'MouseOverComponentSubmeshId': ko.observable(),\r\n            'MouseOverComponentConnector': ko.observable(),\r\n            'IsMouseOverComponent': ko.observable(),\r\n            'MouseOverActionCommand': ko.observable(),\r\n            'MouseOverActionIcon': ko.observable(\"fa-bolt\"),\r\n            'SelectedComponentColor': ko.observable(),\r\n            'SelectedComponentType': ko.observable(),\r\n            'SelectedComponentId': ko.observable(),\r\n            'SelectedComponentData': ko.observable(),\r\n            'SelectedComponentGroupId': ko.observable(),\r\n            'SelectedComponentConnector': ko.observable(),\r\n            'IsComponentSelected': ko.observable(),\r\n            'SelectedActionCommand': ko.observable(),\r\n            'SelectedActionIcon': ko.observable()\r\n        });\r\n        self.sceneLiveActionData()['MousePositionDisplay'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n                if (self.IsOverScene()) {\r\n                    if (self.MousePositionX() !== undefined) {\r\n                        return \"('x': \" + ('' + self.MousePositionX()).substr(0, 5) + \", 'y': \" + ('' + self.MousePositionY()).substr(0, 5) + \", 'z': \" + ('' + self.MousePositionZ()).substr(0, 5) + \")\";\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n            self\r\n        );\r\n\r\n        self.sceneLiveActionData()['MouseOverComponentDisplay'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n                if (self.IsOverScene()) {\r\n                    if (self.IsMouseOverComponent()) {\r\n                        if (self.MouseOverComponentColor() !== undefined) {\r\n                            var component = \"Mouse Over Component: \" + self.MouseOverComponentColor() + \" \" + self.MouseOverComponentType();\r\n                            if (self.MouseOverComponentConnector() !== undefined) {\r\n                                component += \" (\" + self.MouseOverComponentConnector() + \")\";\r\n                            }\r\n                            return component;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                return \"\";\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['MouseOverComponentImage'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n                if (self.IsOverScene()) {\r\n                    if (self.IsMouseOverComponent()) {\r\n                        if (self.MouseOverComponentColor() !== undefined) {\r\n                            if (self.MouseOverComponentType() === 'connector') {\r\n                                return \"./Content/Connectors/\" + self.MouseOverComponentType() + \"-\" + self.MouseOverComponentColor() + \"_clipped_rev_1.png\";\r\n                            }\r\n                            else {\r\n                                return \"./Content/Rods/\" + self.MouseOverComponentType() + \"-\" + self.MouseOverComponentColor() + \"_clipped_rev_1.png\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['SelectedComponentImage'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n             \r\n                if (self.IsComponentSelected()) {\r\n                    if (self.SelectedComponentColor() !== undefined) {\r\n                        if (self.SelectedComponentType() === 'connector') {\r\n                            return \"./Content/Connectors/\" + self.SelectedComponentType() + \"-\" + self.SelectedComponentColor() + \"_clipped_rev_1.png\";\r\n                        }\r\n                        else {\r\n                            return \"./Content/Rods/\" + self.SelectedComponentType() + \"-\" + self.SelectedComponentColor() + \"_clipped_rev_1.png\";\r\n                        }\r\n                    }\r\n                }\r\n                \r\n\r\n                return null;\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['SelectedComponentObject'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n\r\n                if (self.IsComponentSelected()) {\r\n                    if (self.SelectedComponentColor() !== undefined) {\r\n                        if (self.SelectedComponentType() === 'connector') {\r\n                            var index = _.findIndex(CT.dataStore.babylonData().connectors(), function (e) { return e.data.guid === self.SelectedComponentId() });\r\n                            if (index !== -1) {\r\n                                return CT.dataStore.babylonData().connectors()[index].mesh;\r\n                            }\r\n                        }\r\n                        else {\r\n                            var index = _.findIndex(CT.dataStore.babylonData().rods(), function (e) { return e.data.guid === self.SelectedComponentId() });\r\n                            if (index !== -1) {\r\n                                return CT.dataStore.babylonData().rods()[index].mesh;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                return null;\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['SelectedComponentDisplay'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n               \r\n                    if (self.IsComponentSelected()) {\r\n                        if (self.SelectedComponentColor() !== undefined) {\r\n                            var component = \"Selected Component: \" + self.SelectedComponentColor() + \" \" + self.SelectedComponentType();\r\n                            if (self.SelectedComponentConnector() !== undefined) {\r\n                                component += \" (\" + self.SelectedComponentConnector() + \")\";\r\n                            }\r\n                            return component;\r\n                        }\r\n                    }\r\n                \r\n\r\n                return \"\";\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['SelectedComponentColorObject'] = ko.computed(\r\n            function () {\r\n                var self = this.sceneLiveActionData();\r\n\r\n                if (self.SelectedComponentColor()) {\r\n                    var rgb = CT.dataStore.colorData[self.SelectedComponentColor()];\r\n                    return new BABYLON.Color3(rgb.r, rgb.g, rgb.b);\r\n                }\r\n                return null;\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['MouseOverActionDisplay'] = ko.computed(\r\n            function () {\r\n            \r\n                var self = this.sceneLiveActionData();\r\n                //if (self.MouseOverActionCommand() !== undefined) {\r\n                //    return \"Action: \" + self.MouseOverActionCommand();\r\n                //}\r\n                if (self.IsOverScene()) {\r\n                    if (self.IsMouseOverComponent()) {\r\n                        if (self.MouseOverComponentColor() !== undefined) {\r\n                            if (self.IsComponentSelected()) {\r\n                                var color1 = self.MouseOverComponentColor();\r\n                                var type1 = self.MouseOverComponentType();\r\n                                var id1 = self.MouseOverComponentId();\r\n                                var color2 = self.SelectedComponentColor();\r\n                                var type2 = self.SelectedComponentType();\r\n                                var id2 = self.SelectedComponentId();\r\n                                if (id1 !== id2) {\r\n                                    if (type1 !== type2) {\r\n                                        return \"Press enter to connect the \" + color1 + \" \" + type1 + \" to the \" + color2 + \" \" + type2;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                return null;\r\n            },\r\n            self\r\n        );\r\n        self.sceneLiveActionData()['SelectedActionDisplay'] = ko.computed(\r\n            function () {\r\n\r\n                var self = this.sceneLiveActionData();\r\n                if (self.SelectedActionCommand() !== undefined) {\r\n                    return \"Action: \" + self.SelectedActionCommand();\r\n                }\r\n\r\n                return \"\";\r\n            },\r\n            self\r\n        );\r\n\r\n        self.propertiesData = ko.observable({\r\n            'CurrentSelection': ko.observable(\"Scene\")\r\n        });\r\n\r\n        self.sceneData = ko.observable({\r\n            'BackgroundColor': ko.observable(\"rgb(38, 78, 105)\"),\r\n            'Zoom': ko.observable(\"72\"),\r\n            'CameraAngleX': ko.observable(\"0\"),\r\n            'CameraAngleY': ko.observable(\"0\"),\r\n            'CameraAngleZ': ko.observable(\"0\"),\r\n            'LightingN': ko.observable(\"170\"),\r\n            'LightingS': ko.observable(\"60\"),\r\n            'LightingW': ko.observable(\"150\"),\r\n            'LightingE': ko.observable(\"80\"),\r\n            'LightingBack': ko.observable(\"0\"),\r\n            'LightingFront': ko.observable(\"0\")\r\n        });\r\n\r\n        self.initializeData = function(type)\r\n        {\r\n            var self = this;\r\n            var obs = self[type]();\r\n            for (var prop in obs) {\r\n                obs[prop].valueHasMutated();\r\n            }\r\n        }\r\n\r\n        function addSubscriptions(dataname, data) {\r\n            function subhandler(newvalue) {\r\n                CT.eventing.publish(_events[this.dataname + 'ChangedEvent'], { 'path': this.name, 'value': newvalue });\r\n            }\r\n            for (var prop in data) {\r\n                data[prop].subscribe(subhandler.bind({ 'name': prop, 'dataname': dataname }));\r\n            }\r\n        }\r\n\r\n        addSubscriptions(\"sceneData\", self.sceneData());\r\n\r\n        self.babylonData = ko.observable({\r\n            'connectors': ko.observableArray([]),\r\n            'rods': ko.observableArray([]),\r\n            'groups': ko.observableArray([]),\r\n            'arrows': ko.observableArray([])\r\n        });\r\n\r\n        self.hasComponents = ko.computed(\r\n            function () {\r\n                var self = this;\r\n                if (self.babylonData().connectors().length === 0\r\n                    &&\r\n                    self.babylonData().rods().length === 0\r\n                    &&\r\n                    self.babylonData().groups().length === 0) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n            self\r\n        );\r\n\r\n        self.mathData = {\r\n            'toRadians': function (degrees) {\r\n                return degrees * (Math.PI / 180.0);\r\n            }\r\n        }\r\n\r\n        self.colorData = {\r\n            'green': { 'r': 0.1, 'g': 0.8, 'b': 0.3 },\r\n            'yellow': { 'r': 0.98, 'g': 0.98, 'b': 0.02 },\r\n            'red': { 'r': 0.98, 'g': 0.02, 'b': 0.02 },\r\n            'white': { 'r': 0.975, 'g': 0.975, 'b': 0.975 },\r\n            'orange': { 'r': 0.98, 'g': 0.415, 'b': 0.02 },\r\n            'blue': { 'r': 0.15, 'g': 0.15, 'b': 1.0 },\r\n            'purple': { 'r': 0.5, 'g': 0.05, 'b': 0.5 },\r\n            'gray': { 'r': 0.7, 'g': 0.7, 'b': 0.7 },\r\n            'black': { 'r': 0.1, 'g': 0.1, 'b': 0.1 }\r\n        };\r\n\r\n        // needed to reduce the code for creating the connection points by reusing one block of code\r\n        self.connectionPointData = {\r\n            'connector': {\r\n                'red': [2, 3, 5],\r\n                'green': [1, 3, 4, 5],\r\n                'blue': [2, 3, 4, 5, 6, 7, 8],\r\n                'purple': [1, 3, 4, 5],\r\n                'gray': [3],\r\n                'orange': [3, 8],\r\n                'white': [1, 2, 3, 4, 5, 6, 7, 8],\r\n                'yellow': [1, 2, 3, 4, 5]\r\n            }\r\n        };\r\n\r\n        // maps from the connection point data to the number of degrees to rotate around the 3 axes (x, y, and z)\r\n        self.connectionPointRotationData = {\r\n            '1': [0, 90, 0],\r\n            '2': [0, -90, 0],\r\n            '3': [0, 0, 0],\r\n            '4': [0, 45, 0],\r\n            '5': [0, -45, 0],\r\n            '6': [0, 135, 0],\r\n            '7': [0, -135, 0],\r\n            '8': [0, -180, 0]\r\n        };\r\n\r\n        self.componentConnectorData = {\r\n            'yellow': {\r\n                'positions': [],\r\n                'indices':[]\r\n            },\r\n            'white': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'orange': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'gray': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'red': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'green': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'blue': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'purple': {\r\n                'positions': [],\r\n                'indices': []\r\n            }\r\n        };\r\n\r\n        self.componentRodData = {\r\n            'yellow': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'white': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'gray': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'red': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'green': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'blue': {\r\n                'positions': [],\r\n                'indices': []\r\n            },\r\n            'black': {\r\n                'positions': [],\r\n                'indices': []\r\n            }\r\n        };\r\n\r\n\r\n        // needed for the position of the connection points\r\n        self.rodData = {\r\n            \"gray\": {\r\n                \"length\": 20\r\n            },\r\n            \"black\": {\r\n                \"length\": 20\r\n            },\r\n            \"red\": {\r\n                \"length\": 13.7\r\n            },\r\n            \"yellow\": {\r\n                \"length\": 9.19\r\n            },\r\n            \"blue\": {\r\n                \"length\": 6.0157\r\n            },\r\n            \"white\": {\r\n                \"length\": 3.5092\r\n            },\r\n            \"green\": {\r\n                \"length\": 2.005\r\n            }\r\n        };\r\n\r\n        //var connectorworker = new Worker('Renderer/Data/DataWorker.js');\r\n        //var rodworker = new Worker('Renderer/Data/DataWorker.js');\r\n        //self.dataWorkerCount = 2;\r\n        //connectorworker.onmessage = function (e) {\r\n        //    this[\"component\" + e.data.type + \"Data\"] = e.data.data;\r\n        //    self.dataWorkerCount--;\r\n        //    if (self.dataWorkerCount === 0) {\r\n        //        CT.controllers.Scene.hideLoadingScreen();\r\n        //    }\r\n        //}.bind(self);\r\n        //connectorworker.onerror = function (e) {\r\n        //    alert(e);\r\n        //}\r\n        //rodworker.onmessage = function (e) {\r\n        //    this[\"component\" + e.data.type + \"Data\"] = e.data.data;\r\n        //    self.dataWorkerCount--;\r\n        //    if (self.dataWorkerCount === 0) {\r\n        //        CT.controllers.Scene.hideLoadingScreen();\r\n        //    }\r\n        //}.bind(self);\r\n        //rodworker.onerror = function (e) {\r\n        //    alert(e);\r\n        //}\r\n        //connectorworker.postMessage('Connector');\r\n        //rodworker.postMessage('Rod');\r\n    }\r\n    //body = body.replace(/^\\uFEFF/, '');\r\n\r\n    return new DataStore();\r\n\r\n}).call({});\r\n\r\n\r\nmodule.exports = ds;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","var _ = window._;\r\n\r\nvar vms = (function () {\r\n\r\n    var ViewModelStore = function () {\r\n\r\n        var self = this;\r\n\r\n        self.Menu = {\r\n            'View': require('./../Partials/MenuView.js'),\r\n            'ViewModel': require('./../Partials/MenuViewModel.js'),\r\n        };\r\n        self.SceneControls = {\r\n            'View': require('./../Partials/SceneControlsView.js'),\r\n            'ViewModel': require('./../Partials/SceneControlsViewModel.js'),\r\n        };\r\n        self.Scene = {\r\n            'View': require('./../Partials/SceneView.js'),\r\n            'ViewModel': require('./../Partials/SceneViewModel.js'),\r\n        };\r\n\r\n\r\n    }\r\n\r\n\r\n    return new ViewModelStore();\r\n\r\n}).call({});\r\n\r\n\r\nmodule.exports = vms;","var MenuView = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = MenuView;","var MenuViewModel = function () {\r\n\r\n    var self = this;\r\n\r\n\r\n\r\n    return self;\r\n\r\n}\r\n\r\nmodule.exports = MenuViewModel;","var SceneControlsView = function () {\r\n\r\n    var self = this;\r\n\r\n    function buildControls() {\r\n\r\n        var rowOuter = $('<div>', { 'class': 'row', 'style': 'flex-grow:1; color:white' });\r\n\r\n        var colOuter = $('<div>', { 'class': 'col-12' });\r\n\r\n        var field = $('<fieldset>');\r\n\r\n        var legend = $('<legend>');\r\n\r\n        legend.html(\"Settings\");\r\n\r\n        function createBackgroundColorRow() {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel = $('<div>', { 'class': 'col-4' });\r\n\r\n            var label = $('<label>');\r\n\r\n            label.html(\"Background Color\");\r\n\r\n            colLabel.append(label);\r\n\r\n            var colControl = $('<div>', { 'class': 'col-8' });\r\n\r\n            var input = CT.controlsStore[\"ColorPicker\"]({ 'red': 38, 'green': 78, 'blue': 105 }, [\"BackgroundColor\"]);\r\n\r\n            colControl.append(input);\r\n\r\n            row.append(colLabel);\r\n\r\n            row.append(colControl);\r\n\r\n            return row;\r\n        }\r\n\r\n        function createZoomRow() {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel = $('<div>', { 'class': 'col-4' });\r\n\r\n            var label = $('<label>');\r\n\r\n            label.html(\"Zoom\");\r\n\r\n            colLabel.append(label);\r\n\r\n            var colControl = $('<div>', { 'class': 'col-8' });\r\n\r\n            var input = CT.controlsStore[\"Slider\"]({ 'min': 0, 'max': 100, 'suffix': '', 'id': 'SceneZoomSlider' }, [\"Zoom\"]);\r\n\r\n            colControl.append(input);\r\n\r\n            row.append(colLabel);\r\n\r\n            row.append(colControl);\r\n\r\n            return row;\r\n        }\r\n\r\n        field.append(legend);\r\n        field.append(createBackgroundColorRow());\r\n        field.append(createZoomRow());\r\n\r\n        var camerafield = $('<fieldset>');\r\n\r\n        var cameralegend = $('<legend>');\r\n\r\n        cameralegend.html(\"Camera Angle\");\r\n\r\n        camerafield.append(cameralegend);\r\n\r\n        function createCamera(angle) {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel = $('<div>', { 'class': 'col-4' });\r\n\r\n            var label = $('<label>');\r\n\r\n            label.html(angle);\r\n\r\n            colLabel.append(label);\r\n\r\n            var colControl = $('<div>', { 'class': 'col-8' });\r\n\r\n            var input = CT.controlsStore[\"Slider\"]({ 'min': 0, 'max': 360, 'suffix': '&deg;', 'id': 'CameraAngle' + angle + 'Slider' }, [\"CameraAngle\" + angle]);\r\n\r\n            colControl.append(input);\r\n\r\n            row.append(colLabel);\r\n\r\n            row.append(colControl);\r\n\r\n            return row;\r\n        }\r\n\r\n        camerafield.append(createCamera(\"X\"));\r\n\r\n        camerafield.append(createCamera(\"Y\"));\r\n\r\n        camerafield.append(createCamera(\"Z\"));\r\n\r\n        //field.append(camerafield);\r\n\r\n        var lightfield = $('<fieldset>');\r\n\r\n        var lightlegend = $('<legend>');\r\n\r\n        lightlegend.html(\"Lighting\");\r\n\r\n        lightfield.append(lightlegend);\r\n\r\n        function createLight(angle) {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel = $('<div>', { 'class': 'col-4' });\r\n\r\n            var label = $('<label>');\r\n\r\n            label.html(angle);\r\n\r\n            colLabel.append(label);\r\n\r\n            var colControl = $('<div>', { 'class': 'col-8' });\r\n\r\n            var input = CT.controlsStore[\"Slider\"]({ 'min': 0, 'max': 200, 'suffix': '', 'id': 'CameraLighting' + angle + 'Slider' }, [\"Lighting\" + angle]);\r\n\r\n            colControl.append(input);\r\n\r\n            row.append(colLabel);\r\n\r\n            row.append(colControl);\r\n\r\n            return row;\r\n        }\r\n\r\n        lightfield.append(createLight(\"N\"));\r\n\r\n        lightfield.append(createLight(\"S\"));\r\n\r\n        lightfield.append(createLight(\"W\"));\r\n\r\n        lightfield.append(createLight(\"E\"));\r\n\r\n        //lightfield.append(createLight(\"Back\"));\r\n\r\n        //lightfield.append(createLight(\"Front\"));\r\n\r\n        field.append(lightfield);\r\n\r\n        colOuter.append(field);\r\n\r\n        rowOuter.append(colOuter);\r\n\r\n        return rowOuter;\r\n    }\r\n\r\n    return {\r\n        'mainView': buildControls,\r\n        'subViews': {\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\nmodule.exports = SceneControlsView;","var SceneControlsViewModel = function () {\r\n\r\n    var self = this;\r\n\r\n    self.SceneControls = CT.dataStore.sceneData;\r\n\r\n    return self;\r\n\r\n}\r\n\r\nmodule.exports = SceneControlsViewModel;","var SceneView = function () {\r\n\r\n    /*\r\n     <div style=\"height:600px; padding:15px\" class=\"jumbotron\">\r\n        <h2>Scene</h2>\r\n        <canvas id=\"renderCanvas\" style=\"width:100%; height:100%; touch-action:none\"></canvas>\r\n    </div>\r\n     */\r\n\r\n\r\n    var self = this;\r\n\r\n    function buildMainView() {\r\n\r\n        var outerDiv = $('<div>', { 'style': 'height:600px; padding-left:40px; padding-right:40px; padding-bottom:46px; min-width:700px; padding-top:50px', 'class': 'jumbotron' });\r\n\r\n        var canvas = $('<canvas>', { 'id': 'renderCanvas', 'class': 'customMousePointer', 'style': 'width:100%; height:100%; min-width:100%; touch-action:none' });\r\n\r\n        canvas.droppable({\r\n            classes: {\r\n                \"ui-droppable-active\": \"ui-state-active\",\r\n                \"ui-droppable-hover\": \"ui-state-hover\"\r\n            }//,\r\n            //drop: function (event, ui) {\r\n            //    var el = ui.draggable;\r\n            //    var id = el.attr(\"id\");\r\n            //    if (id) {\r\n            //        var color = el.data(\"color\");\r\n            //        var type = el.data(\"type\");\r\n            //        if (type === 'connector') {\r\n            //            CT.dataStore.addToSceneData().showConnectors[color](false);\r\n            //        }\r\n            //        else {\r\n            //            CT.dataStore.addToSceneData().showRods[color](false);\r\n            //        }\r\n            //        var input = { 'id': id, 'type': type, 'color': color, 'canvasoffset': $(this).offset(), 'canvaswidth': $(this).width(), 'canvasheight': $(this).height(), 'componentoffset': el.offset() };\r\n            //        setTimeout(performEvent.bind(input), 10);\r\n            //    }\r\n\r\n            //}\r\n        });\r\n\r\n        outerDiv.append(canvas);\r\n\r\n        /*\r\n         <div class=\"container\" style=\"position:absolute; top:50px; left:0px; width:50px; height:300px\">\r\n        <div style=\"padding:15px; width:45px\">\r\n          <i class=\"fa fa-times\"></i>\r\n        </div>\r\n      </div>\r\n         */\r\n\r\n        function buildBottomActionBar() {\r\n            var bar = $('<div>', { 'class': 'container', 'style': 'position:absolute; top:555px; left:40px; height:50px; min-width:700px; max-width:90%' });\r\n\r\n            var div = $('<div>', { 'data-bind': 'with:CT.dataStore.sceneLiveActionData' });\r\n\r\n            bar.append(div);\r\n\r\n            function addAction(icon, binding, actionicon, actionbinding) {\r\n\r\n                var innerdiv = $('<div>', { 'style': 'height:45px; width:260px; overflow-x:hidden; display:inline-block' });\r\n\r\n                var button = $('<button>', { 'data-bind': 'visible:(' + binding + '() !== null)', 'class': 'btn btn-outline-primary', 'disabled': true, 'style': 'opacity: 1; margin-top: 1px; margin-right: 5px; text-align: left; width: 260px;' });\r\n\r\n                var icon = $('<i>', { 'class': '' + icon, 'style': 'padding-right:5px' });\r\n\r\n                button.prepend(icon);\r\n\r\n                var span = $('<span>', { 'data-bind': 'html:' + binding });\r\n\r\n                button.append(span);\r\n\r\n                innerdiv.append(button);\r\n\r\n                this.append(innerdiv);\r\n\r\n\r\n\r\n                var innerdiv4 = $('<div>', { 'style': 'height:45px; width:300px; display:inline-block; vertical-align:top' });\r\n\r\n                var button4 = $('<button>', { 'data-bind': 'visible:(' + actionbinding + '() !== null)', 'class': 'btn btn-outline-primary', 'disabled': true, 'style': 'opacity: 1; margin-top: 1px; margin-right: 5px; text-align: left; vertical-align: top; width: 300px;' });\r\n\r\n                var icon4 = $('<i>', { 'class': '' + actionicon, 'style': 'padding-right:5px; display:inline-block; position:relative; top:-10px' });\r\n\r\n                button4.prepend(icon4);\r\n\r\n                var span4 = $('<p>', { 'style': 'word-wrap:break-word; white-space:normal; line-height:1.0; vertical-align:top; width:300px', 'data-bind': 'html:' + actionbinding });\r\n\r\n                var div4 = $('<div>', { 'style': 'display:inline-block; position:relative; top:-5px' });\r\n\r\n                div4.append(span4);\r\n\r\n                button4.append(div4);\r\n\r\n                innerdiv4.append(button4);\r\n\r\n                this.append(innerdiv4);\r\n\r\n            }\r\n\r\n            addAction.bind(div)('fa fa-mouse-pointer', \"$data.MousePositionDisplay\",\r\n                \"fa fa-bolt\", \"$data.MouseOverActionDisplay\");\r\n\r\n            return bar;\r\n        }\r\n\r\n        function buildTopActionBar() {\r\n            var bar = $('<div>', { 'class': 'container', 'style': 'position:absolute; top:0px; overflow-y:visible; overflow-x:visible; left:40px; height:50px; min-width:700px; max-width:90%; padding-top:3px' });\r\n\r\n            var div = $('<div>', { 'data-bind': 'with:CT.dataStore.sceneLiveActionData' });\r\n\r\n            bar.append(div);\r\n\r\n            function addAction(imagelink, rotateLeft, rotateRight, imagelink2) {\r\n\r\n                var innerdiv2 = $('<div>', { 'style': 'height:45px; display:inline-block; vertical-align:top' });\r\n\r\n                var image = $('<button>', { 'data-bind': 'visible:(' + imagelink + '() !== null)', 'class': 'btn btn-primary', 'disabled': true, 'style': 'opacity:1.0; margin-top:0px;' });\r\n\r\n                var icon = $('<img>', { 'data-bind': 'attr:{ src:' + imagelink + ' }', 'style': 'height:30px' });\r\n\r\n                image.prepend(icon);\r\n\r\n                innerdiv2.append(image);\r\n\r\n                function addRotationButtons(imagelink, rotateLeft, rotateRight, axis) {\r\n\r\n                    var rotateL = $('<button>', {\r\n                        'data-bind': 'visible:(' + imagelink + '() !== null)',\r\n                        'class': 'btn btn-primary rotateLeftButton',\r\n                        'style': 'opacity:1.0; margin-top:0px; height:44px; margin-left:10px;'\r\n                    });\r\n\r\n                    var icon = $('<i>', {\r\n                        'data-toggle': 'tooltip', 'data-placement': 'top', 'title': 'Rotate Left (' + axis + ')',\r\n                        'class': rotateLeft + \" rotateLeftButtonIcon\" + axis, 'style': 'font-size:22px'\r\n                    });\r\n\r\n                    rotateL.on({\r\n                        'click': function (e) {\r\n                            var el = $(e.target);\r\n                            CT.controllers.Scene.rotateLeft(this.axis);\r\n                        }.bind({ 'axis': axis })\r\n                    });\r\n\r\n                    rotateL.hover(\r\n                        function () {\r\n                            var t = $(this);\r\n                            if (t.is(\"button\")) {\r\n                                var icon = t.find(\"i\");\r\n                                icon.tooltip(\"show\");\r\n                                CT.builders.Arrow.build(axis, 'left',\r\n                                    CT.dataStore.sceneLiveActionData().SelectedComponentColorObject(),\r\n                                    CT.controllers.AddToScene.getScene());\r\n                            }\r\n                        },\r\n                        function () {\r\n                            var t = $(this);\r\n                            if (t.is(\"button\")) {\r\n                                var icon = t.find(\"i\");\r\n                                icon.tooltip(\"hide\");\r\n                                CT.dataStore.babylonData().arrows()[0].dispose();\r\n                                CT.dataStore.babylonData().arrows.pop();\r\n\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    rotateL.prepend(icon);\r\n\r\n                    //<span style=\"position:relative; left:-8px; top:10px; font-size:12px\">X</span>\r\n\r\n                    icon.tooltip({\r\n                        'animation': true,\r\n                        'trigger': 'manual',\r\n                        'container': '.rotateLeftButtonIcon' + axis,\r\n                        'delay': { show: 250, hide: 100 }\r\n                    });\r\n\r\n                    innerdiv2.append(rotateL);\r\n\r\n                    var rotateR = $('<button>', { 'data-bind': 'visible:(' + imagelink + '() !== null)', 'class': 'btn btn-primary', 'style': 'opacity:1.0; margin-top:0px; height:44px' });\r\n\r\n                    var icon = $('<i>', {\r\n                        'data-toggle': 'tooltip', 'data-placement': 'top', 'title': 'Rotate Right (' + axis + ')',\r\n                        'class': rotateRight + \" rotateRightButtonIcon\" + axis, 'style': 'font-size:22px'\r\n                    });\r\n\r\n                    rotateR.on({\r\n                        'click': function (e) {\r\n                            var el = $(e.target);\r\n                            CT.controllers.Scene.rotateRight(this.axis);\r\n                        }.bind({ 'axis': axis })\r\n                    });\r\n\r\n                    rotateR.hover(\r\n                        function () {\r\n                            var t = $(this);\r\n                            if (t.is(\"button\")) {\r\n                                var icon = t.find(\"i\");\r\n                                icon.tooltip(\"show\");\r\n                                CT.builders.Arrow.build(axis, 'right',\r\n                                    CT.dataStore.sceneLiveActionData().SelectedComponentColorObject(),\r\n                                    CT.controllers.AddToScene.getScene());\r\n\r\n                            }\r\n                        },\r\n                        function () {\r\n                            var t = $(this);\r\n                            if (t.is(\"button\")) {\r\n                                var icon = t.find(\"i\");\r\n                                icon.tooltip(\"hide\");\r\n                                CT.dataStore.babylonData().arrows()[0].dispose();\r\n                                CT.dataStore.babylonData().arrows.pop();\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    rotateR.prepend(icon);\r\n\r\n                    icon.tooltip({\r\n                        'animation': true,\r\n                        'trigger': 'manual',\r\n                        'container': '.rotateRightButtonIcon' + axis,\r\n                        'delay': { show: 250, hide: 100 }\r\n                    });\r\n\r\n                    this.append(rotateR);\r\n\r\n                }\r\n\r\n                addRotationButtons.bind(innerdiv2)(imagelink, rotateLeft, rotateRight, 'x');\r\n\r\n                addRotationButtons.bind(innerdiv2)(imagelink, rotateLeft, rotateRight, 'y');\r\n\r\n                addRotationButtons.bind(innerdiv2)(imagelink, rotateLeft, rotateRight, 'z');\r\n\r\n                this.append(innerdiv2);\r\n\r\n                var innerdiv3 = $('<div>', { 'style': 'height:45px; display:inline-block; vertical-align:top' });\r\n\r\n                var image3 = $('<button>', { 'data-bind': 'visible:(' + imagelink2 + '() !== null)', 'class': 'btn btn-info', 'disabled': true, 'style': 'opacity:1.0; margin-top:0px;' });\r\n\r\n                var icon3 = $('<img>', { 'data-bind': 'attr:{ src:' + imagelink2 + ' }', 'style': 'height:30px' });\r\n\r\n                image3.prepend(icon3);\r\n\r\n                innerdiv3.append(image3);\r\n\r\n                this.append(innerdiv3);\r\n\r\n            }\r\n\r\n            addAction.bind(div)(\"$data.SelectedComponentImage\", \"icon-sco-rotate-left\", \"icon-sco-rotate-right\", \"$data.MouseOverComponentImage\");\r\n\r\n            return bar;\r\n        }\r\n\r\n        // top action bar\r\n        var topactionbar = buildTopActionBar();\r\n\r\n        //function buildAxes() {\r\n\r\n        //    var bar = $('<div>', { 'class': 'container', 'style': 'position:absolute; top:50px; overflow-y:visible; overflow-x:visible; left:40px; height:100px; min-width:700px; max-width:90%; padding-top:3px' });\r\n\r\n        //    var div = $('<div>');\r\n\r\n        //    var button4 = $('<button>', { 'class': 'btn btn-outline-primary rotationAxes', 'disabled': true, 'style': 'display:none; opacity: 1; margin-top: 1px; margin-right: 5px; text-align: left; border:0px; vertical-align: top; width: 100px;' });\r\n\r\n        //    var icon4 = $('<i>', { 'class': 'icon-sco-axes', 'style': 'padding-right:5px; display:inline-block; position:relative; font-size:125px' });\r\n\r\n        //    function addPaths(count) {\r\n        //        var i = 0;\r\n        //        var self = this;\r\n        //        while (i++ < count) {\r\n        //            var path = $('<span>', { 'class': 'path' + i });\r\n        //            self.append(path);\r\n        //            self = path;\r\n        //        }\r\n        //    }\r\n\r\n        //    addPaths.bind(icon4)(5);\r\n\r\n        //    button4.prepend(icon4);\r\n\r\n        //    div.append(button4);\r\n\r\n        //    bar.append(div);\r\n\r\n        //    return bar;\r\n        //}\r\n\r\n        //var axes = buildAxes();\r\n\r\n        function buildLeftActionBar() {\r\n            var bar = $('<div>', { 'class': 'container', 'style': 'position:absolute; top:45px; overflow-y:visible; overflow-x:visible; left:0px; height:500px; width:55px' });\r\n\r\n            function addIcon(icon1, tooltipclass, text, event) {\r\n\r\n                var classname = icon1;\r\n                if (icon1.indexOf(\" \") !== -1) {\r\n                    classname = icon1.substr(icon1.indexOf(\" \") + 1);\r\n                }\r\n\r\n                var innerdiv = $('<div>', { 'style': 'height:45px;' });\r\n\r\n                var button = $('<button>', { 'class': 'btn btn-outline-primary', 'style': 'margin-top:5px; margin-right:5px' });\r\n\r\n                button.on({\r\n                    'click': function (e) {\r\n                        var i = $(e.target);\r\n                        var event = this;\r\n                        CT.eventing.publish(CT.events[event], {});\r\n                    }.bind(event)\r\n                });\r\n\r\n                button.hover(\r\n                    function () {\r\n                        var t = $(this);\r\n                        if (t.is(\"button\")) {\r\n                            var icon = t.find(\"i\");\r\n                            icon.tooltip(\"show\");\r\n                        }\r\n                    },\r\n                    function () {\r\n                        var t = $(this);\r\n                        if (t.is(\"button\")) {\r\n                            var icon = t.find(\"i\");\r\n                            icon.tooltip(\"hide\");\r\n\r\n                        }\r\n                    }\r\n                );\r\n\r\n                var icon = $('<i>', {\r\n                    'data-toggle': 'tooltip', 'data-placement': 'left', 'title': '' + text,\r\n                    'class': '' + icon1 + ' ' + tooltipclass + ' ' + classname + 'Left'\r\n                });\r\n\r\n                icon.tooltip({\r\n                    'animation': true,\r\n                    'trigger': 'manual',\r\n                    'container': '.' + classname + 'Left',\r\n                    'delay': { show: 250, hide: 100 }\r\n                });\r\n\r\n                function addPaths(count) {\r\n                    var i = 0;\r\n                    var self = this;\r\n                    while (i++ < count) {\r\n                        var path = $('<span>', { 'class': 'path' + i });\r\n                        self.append(path);\r\n                        self = path;\r\n                    }\r\n                }\r\n\r\n                addPaths.bind(icon)(4);\r\n\r\n                button.prepend(icon);\r\n\r\n                innerdiv.append(button);\r\n\r\n                this.append(innerdiv);\r\n\r\n            }\r\n\r\n            addIcon.bind(bar)('icon-sco-file-plus', \"leftNavIcon5\", \"New Scene\", \"newSceneEvent\");\r\n            //addIcon.bind(bar)('fa fa-plus', \" New Scene\", \"newSceneEvent\");\r\n\r\n            addIcon.bind(bar)('fa fa-folder-open', \"leftNavIcon3\", \"Load Scene\", \"loadSceneEvent\");\r\n\r\n            addIcon.bind(bar)('fa fa-upload', \"leftNavIcon5\", \"Save Scene\", \"saveSceneEvent\");\r\n\r\n            addIcon.bind(bar)('fa fa-plus', \"leftNavIcon7\", \"Add Component\", \"addComponentEvent\");\r\n\r\n            addIcon.bind(bar)('fa fa-bars', \"leftNavIcon7\", \"View Added Components\", \"viewAddedComponentsEvent\");\r\n\r\n            return bar;\r\n        }\r\n\r\n        // left action bar\r\n        var leftactionbar = buildLeftActionBar();\r\n\r\n        // overlay\r\n        //var overlay = buildOverlay();\r\n\r\n        var viewdiv = $('<div>', { 'id':'SceneViewSubviewHook' });\r\n\r\n        viewdiv.append(topactionbar);\r\n\r\n        viewdiv.append(leftactionbar);\r\n\r\n        viewdiv.append(buildBottomActionBar());\r\n\r\n        //viewdiv.append(overlay);\r\n\r\n        //viewdiv.append(axes);\r\n\r\n        viewdiv.append(outerDiv);\r\n\r\n        return viewdiv;\r\n\r\n    }\r\n\r\n    function buildImportOverlay() {\r\n        var overlay = $('<div>', {\r\n            'class': 'container', 'style': 'z-index:200; position:absolute; top:50px; left:55px; background-color:rgba(0, 0, 0, 0.2); padding-right: 0px; width: 60%'\r\n        });\r\n        overlay.data(\"parentId\", 'SceneViewSubviewHook');\r\n\r\n\r\n        var content = $('<div>', {\r\n            'data-bind': 'with:CT.dataStore.importSceneData', 'style': 'max-height:510px; overflow-y:auto; overflow-x: hidden; width: 100%'\r\n        });\r\n\r\n        overlay.append(content);\r\n\r\n        var field = $('<fieldset>');\r\n\r\n        var rdiv = $('<div>', { 'style': 'position:absolute; top:0px; z-index:1000; right:15px; width:40px' });\r\n\r\n        var rbutton = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n\r\n        rbutton.on(\r\n            {\r\n                'click': function (e) {\r\n\r\n                    CT.controllers.View.removeSubview(\"Scene\", \"importOverlay\");\r\n\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        );\r\n\r\n        var ri = $('<i>', { 'class': 'fa fa-remove' });\r\n\r\n        rbutton.append(ri);\r\n\r\n        rdiv.append(rbutton);\r\n\r\n        content.append(rdiv);\r\n\r\n        content.append(field);\r\n\r\n        var legend = $('<legend>', { 'style': 'color:white; font-weight:bold' });\r\n\r\n        legend.html(\"Scene Data\");\r\n\r\n        var row = $('<div>', { 'class': 'row' });\r\n\r\n        var colLabel1 = $('<div>', { 'class': 'col-12' });\r\n\r\n        row.append(colLabel1);\r\n\r\n        var textarea = $('<textarea>', { 'id': 'importTextId', 'cols': 50, 'rows': 10 });\r\n\r\n        textarea.attr(\"data-bind\", \"value:$data.ImportData\");\r\n\r\n        colLabel1.append(textarea);\r\n\r\n        field.append(legend);\r\n\r\n        field.append(row);\r\n\r\n        function buildButtonRow() {\r\n\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel1 = $('<div>', { 'class': 'col-12' });\r\n\r\n            row.append(colLabel1);\r\n\r\n            var ibutton = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n\r\n            ibutton.on(\r\n                {\r\n                    'click': function (e) {\r\n\r\n                        CT.controllers.Scene.clearScene();\r\n                        CT.controllers.Scene.loadScene();\r\n                        e.stopPropagation();\r\n                    }\r\n                }\r\n            );\r\n\r\n            ibutton.html(\"Load Scene\");\r\n\r\n            colLabel1.append(ibutton);\r\n\r\n            return row;\r\n        }\r\n\r\n        field.append(buildButtonRow());\r\n\r\n        return overlay;\r\n    }\r\n\r\n    function buildSaveOverlay() {\r\n        var overlay = $('<div>', {\r\n            'class': 'container', 'style': 'z-index:200; position:absolute; top:50px; left:55px; background-color:rgba(0, 0, 0, 0.2); padding-right: 0px; width: 60%'\r\n        });\r\n        overlay.data(\"parentId\", 'SceneViewSubviewHook');\r\n\r\n\r\n        var content = $('<div>', {\r\n            'data-bind': 'with:CT.dataStore.saveSceneData', 'style': 'max-height:510px; overflow-y:auto; overflow-x: hidden; width: 100%'\r\n        });\r\n\r\n        overlay.append(content);\r\n\r\n        var field = $('<fieldset>');\r\n\r\n        var rdiv = $('<div>', { 'style': 'position:absolute; top:0px; z-index:1000; right:15px; width:40px' });\r\n\r\n        var rbutton = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n\r\n        rbutton.on(\r\n            {\r\n                'click': function (e) {\r\n\r\n                    CT.controllers.View.removeSubview(\"Scene\", \"saveOverlay\");\r\n\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        );\r\n\r\n        var ri = $('<i>', { 'class': 'fa fa-remove' });\r\n\r\n        rbutton.append(ri);\r\n\r\n        rdiv.append(rbutton);\r\n\r\n        content.append(rdiv);\r\n\r\n        content.append(field);\r\n\r\n        var legend = $('<legend>', { 'style': 'color:white; font-weight:bold' });\r\n\r\n        legend.html(\"Scene Data\");\r\n\r\n        var row = $('<div>', { 'class': 'row' });\r\n\r\n        var colLabel1 = $('<div>', { 'class': 'col-12' });\r\n\r\n        row.append(colLabel1);\r\n\r\n        var textarea = $('<textarea>', { 'id': 'saveTextId', 'cols': 50, 'rows': 10 });\r\n\r\n        textarea.attr(\"data-bind\", \"html:$data.ExportData\");\r\n\r\n        colLabel1.append(textarea);\r\n\r\n        field.append(legend);\r\n\r\n        field.append(row);\r\n\r\n        return overlay;\r\n    }\r\n\r\n    function buildOverlay() {\r\n        var overlay = $('<div>', {\r\n            'class': 'container', 'style': 'z-index:200; position:absolute; top:50px; left:55px; background-color:rgba(0, 0, 0, 0.2); padding-right: 0px; width: 60%'\r\n        });\r\n        overlay.data(\"parentId\", 'SceneViewSubviewHook');\r\n\r\n\r\n        var content = $('<div>', {\r\n            'data-bind': 'with:CT.dataStore.addToSceneData', 'style': 'max-height:510px; overflow-y:auto; overflow-x: hidden; width: 100%'\r\n        });\r\n\r\n        overlay.append(content);\r\n\r\n        var field = $('<fieldset>');\r\n\r\n        var rdiv = $('<div>', { 'style': 'position:absolute; top:0px; z-index:1000; right:15px; width:40px' });\r\n\r\n        var rbutton = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n\r\n        rbutton.on(\r\n            {\r\n                'click': function (e) {\r\n\r\n                    CT.controllers.View.removeSubview(\"Scene\", \"addComponentOverlay\");\r\n\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        );\r\n\r\n        var ri = $('<i>', { 'class': 'fa fa-remove' });\r\n\r\n        rbutton.append(ri);\r\n\r\n        rdiv.append(rbutton);\r\n\r\n        content.append(rdiv);\r\n\r\n        content.append(field);\r\n\r\n        var legend = $('<legend>', { 'style': 'color:white; font-weight:bold' });\r\n\r\n        legend.html(\"Connector Components\");\r\n\r\n        //legend.attr(\"data-bind\", \"visible:$data.loadedConnectors.green\");\r\n\r\n        field.append(legend);\r\n\r\n        function createImageRow() {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel1 = $('<div>', { 'class': 'col-12' });\r\n\r\n            function addImage(color) {\r\n\r\n                var imgGreen = CT.controlsStore[\"Image\"]({ 'style': 'width:115px', 'data': { 'type': 'connector', 'color': color }, 'id': 'connector-' + color, 'src': './Content/Connectors/connector-' + color + '_clipped_rev_1.png' });\r\n\r\n                imgGreen.attr(\"data-bind\", \"style: {'opacity' : $data.showConnectors.\" + color + \"() ? '1.0' : '0.4'}\");\r\n\r\n                var button = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n\r\n                button.on(\r\n                    {\r\n                        'click': function (e) {\r\n                            var t = $(e.target);\r\n\r\n                            function performEvent() {\r\n                                CT.eventing.publish(_events.componentDroppedOnToSceneEvent, this);\r\n                                if (this.type === 'connector') {\r\n                                    CT.dataStore.addToSceneData().showConnectors[this.color](true);\r\n                                }\r\n                                else {\r\n                                    CT.dataStore.addToSceneData().showRods[this.color](true);\r\n                                }\r\n                            }\r\n\r\n                            var el = null;\r\n                            if (t.is(\"button\")) {\r\n                                el = t.find(\"img\");\r\n                            }\r\n                            else if (t.is(\"img\")) {\r\n                                el = t;\r\n                            }\r\n                            if (el !== null) {\r\n                                var id = el.attr(\"id\");\r\n                                if (id) {\r\n                                    var color = el.data(\"color\");\r\n                                    var type = el.data(\"type\");\r\n                                    if (type === 'connector') {\r\n                                        CT.dataStore.addToSceneData().showConnectors[color](false);\r\n                                    }\r\n                                    else {\r\n                                        CT.dataStore.addToSceneData().showRods[color](false);\r\n                                    }\r\n                                    var input = { 'id': id, 'type': type, 'color': color, 'canvasoffset': $(this).offset(), 'canvaswidth': $(this).width(), 'canvasheight': $(this).height(), 'componentoffset': el.offset() };\r\n                                    setTimeout(performEvent.bind(input), 1);\r\n                                    e.stopPropagation();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n\r\n                button.append(imgGreen);\r\n\r\n                this.append(button);\r\n            }\r\n\r\n            addImage.bind(colLabel1)(\"green\");\r\n\r\n            addImage.bind(colLabel1)(\"orange\");\r\n\r\n            addImage.bind(colLabel1)(\"purple\");\r\n\r\n            addImage.bind(colLabel1)(\"red\");\r\n\r\n            addImage.bind(colLabel1)(\"blue\");\r\n\r\n            addImage.bind(colLabel1)(\"gray\");\r\n\r\n            addImage.bind(colLabel1)(\"white\");\r\n\r\n            addImage.bind(colLabel1)(\"yellow\");\r\n\r\n            row.append(colLabel1);\r\n\r\n            return row;\r\n        }\r\n\r\n        field.append(createImageRow());\r\n\r\n        var legendRod = $('<legend>', { 'style': 'color:white; font-weight:bold' });\r\n\r\n        legendRod.html(\"Rod Components\");\r\n\r\n        //legendRod.attr(\"data-bind\", \"visible:$data.loadedRods.black\");\r\n\r\n        field.append(legendRod);\r\n\r\n        function createRodRow() {\r\n            var row = $('<div>', { 'class': 'row' });\r\n\r\n            var colLabel1 = $('<div>', { 'class': 'col-12' });\r\n\r\n            function addImage(color, width) {\r\n                var imgGreen = CT.controlsStore[\"Image\"]({ 'style': 'width:' + width + 'px', 'data': { 'type': 'rod', 'color': color }, 'id': 'rod-' + color, 'src': './Content/Rods/rod-' + color + '_clipped_rev_1.png' });\r\n\r\n                imgGreen.attr(\"data-bind\", \"style: {'opacity' : $data.showRods.\" + color + \"() ? '1.0' : '0.4'}\");\r\n\r\n                var button = $('<button>', { 'class': 'btn btn-outline-primary' });\r\n\r\n                button.on(\r\n                    {\r\n                        'click': function (e) {\r\n                            var t = $(e.target);\r\n\r\n                            function performEvent() {\r\n                                CT.eventing.publish(_events.componentDroppedOnToSceneEvent, this);\r\n                                if (this.type === 'connector') {\r\n                                    CT.dataStore.addToSceneData().showConnectors[this.color](true);\r\n                                }\r\n                                else {\r\n                                    CT.dataStore.addToSceneData().showRods[this.color](true);\r\n                                }\r\n                            }\r\n\r\n                            var el = null;\r\n                            if (t.is(\"button\")) {\r\n                                el = t.find(\"img\");\r\n                            }\r\n                            else if (t.is(\"img\")) {\r\n                                el = t;\r\n                            }\r\n                            if (el !== null) {\r\n                                var id = el.attr(\"id\");\r\n                                if (id) {\r\n                                    var color = el.data(\"color\");\r\n                                    var type = el.data(\"type\");\r\n                                    if (type === 'connector') {\r\n                                        CT.dataStore.addToSceneData().showConnectors[color](false);\r\n                                    }\r\n                                    else {\r\n                                        CT.dataStore.addToSceneData().showRods[color](false);\r\n                                    }\r\n                                    var input = { 'id': id, 'type': type, 'color': color, 'canvasoffset': $(this).offset(), 'canvaswidth': $(this).width(), 'canvasheight': $(this).height(), 'componentoffset': el.offset() };\r\n                                    setTimeout(performEvent.bind(input), 1);\r\n                                    e.stopPropagation();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n\r\n                button.append(imgGreen);\r\n\r\n                this.append(button);\r\n            }\r\n\r\n            addImage.bind(colLabel1)(\"black\", \"400\");\r\n\r\n            addImage.bind(colLabel1)(\"gray\", \"400\");\r\n\r\n            addImage.bind(colLabel1)(\"red\", \"250\");\r\n\r\n            addImage.bind(colLabel1)(\"yellow\", \"200\");\r\n\r\n            addImage.bind(colLabel1)(\"blue\", \"130\");\r\n\r\n            addImage.bind(colLabel1)(\"white\", \"130\");\r\n\r\n            addImage.bind(colLabel1)(\"green\", \"115\");\r\n\r\n            row.append(colLabel1);\r\n\r\n            return row;\r\n        }\r\n\r\n        field.append(createRodRow());\r\n\r\n        return overlay;\r\n    }\r\n\r\n\r\n    return {\r\n        'mainView': buildMainView,\r\n        'subViews': {\r\n            'addComponentOverlay': buildOverlay,\r\n            'saveOverlay': buildSaveOverlay,\r\n            'importOverlay': buildImportOverlay\r\n        }\r\n    };\r\n\r\n\r\n\r\n}\r\n\r\nmodule.exports = SceneView;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","var SceneViewModel = function () {\r\n\r\n    var self = this;\r\n\r\n    self.Scene = CT.dataStore.babylonData;\r\n\r\n    CT.controllers.AddToScene.initializeScene();\r\n\r\n    self.SceneLiveAction = CT.dataStore.sceneLiveActionData;\r\n    function isMouseOverComponentHandler(value) {\r\n        if (value) {\r\n            $('#SceneView').css(\"cursor\", \"pointer\");\r\n            $('#SceneView').on(\r\n                {\r\n                    'keydown': function (e) {\r\n                        switch (e.which) {\r\n                            case 13:\r\n                                var actionData = CT.dataStore.sceneLiveActionData();\r\n                                var x = actionData.MousePositionX();\r\n                                var y = actionData.MousePositionY();\r\n                                var z = actionData.MousePositionZ();\r\n                                CT.controllers.AddToScene.connectSelectedComponent(x, y, z);\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        }\r\n        else {\r\n            $('#SceneView').css(\"cursor\", \"auto\");\r\n            $('#SceneView').off(\"keydown\");\r\n        }\r\n    }\r\n    self.SceneLiveAction().IsMouseOverComponent.subscribe(isMouseOverComponentHandler);\r\n\r\n    return self;\r\n\r\n\r\n}\r\n\r\nmodule.exports = SceneViewModel;","\r\n\r\nmodule.exports = (function (CT) {\r\n\r\n    var self = {\r\n        initialize: initialize\r\n    };\r\n\r\n    function initialize() {\r\n        return self;\r\n    }\r\n\r\n    return self;\r\n\r\n}).call({}, CT);","var DataBind = function ($el, bindingString, arr) {\r\n\r\n    if (!arr) {\r\n        arr = [];\r\n    }\r\n    if (arr.length > 0) {\r\n        var path = arr.map(function (v, i) { return '.' + v });\r\n        bindingString = bindingString.replace(\"$data\", \"$data\" + path.join(''));\r\n    }\r\n    $el.attr(\"data-bind\", bindingString);    \r\n\r\n}\r\n\r\nmodule.exports = DataBind;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}